<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/tx
     	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd">

	<tx:annotation-driven />
	<context:property-placeholder location="classpath:db.properties,classpath:config.properties" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialSize">
			<value>${jdbc.initialSize}</value>
		</property>
		<property name="maxActive">
			<value>${jdbc.maxActive}</value>
		</property>
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="wall-filter" />
			</list>
		</property>
	</bean>
	
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="1000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
	</bean>

	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
		<property name="dbType" value="mysql" />
		<property name="config" ref="wall-filter-config" />
	</bean>

	<bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig">
		<property name="multiStatementAllow" value="true" />
	</bean>

	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
		<property name="patterns">
			<list>
				<value>io.renren.modules.*.controller.*</value>
				<value>io.renren.modules.*.service.*</value>
			</list>
		</property>
	</bean>
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut"/>
	</aop:config>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置实体扫描路径，多个package可以用分号或逗号分隔，支持通配符*-->
		<!-- 如：io.renren.modules.*.entity,io.renren.*.entity-->
		<property name="typeAliasesPackage" value="io.renren.modules.*.entity"/>
		<property name="mapperLocations" value="classpath:mapper/**/*.xml" />
		<property name="configuration" ref="mybatisConfig"/>
		<!-- MP 全局配置注入 -->
		<property name="globalConfig" ref="globalConfig"/>
		<property name="plugins">
			<array>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor"
					  class="com.baomidou.mybatisplus.plugins.PaginationInterceptor"/>
				<!-- 乐观锁插件 -->
				<bean id="optimisticLockerInterceptor"
					  class="com.baomidou.mybatisplus.plugins.OptimisticLockerInterceptor">
				</bean>
				<!-- 性能拦截器，兼打印sql，不建议生产环境配置-->
				<bean id="performanceInterceptor"
					  class="com.baomidou.mybatisplus.plugins.PerformanceInterceptor"/>
			</array>
		</property>
	</bean>

	<bean id="mybatisConfig" class="com.baomidou.mybatisplus.MybatisConfiguration">
		<property name="mapUnderscoreToCamelCase" value="true"/>
		<!-- 部分数据库不识别默认的NULL类型（比如oracle，需要配置该属性 -->
		<property name="jdbcTypeForNull">
			<util:constant static-field="org.apache.ibatis.type.JdbcType.NULL"/>
		</property>
	</bean>

	<!-- 定义 MP 全局策略 -->
	<bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
		<!-- 逻辑删除 定义下面3个参数-->
		<property name="sqlInjector" ref="logicSqlInjector"/>
		<property name="logicDeleteValue" value="-1"/>
		<property name="logicNotDeleteValue" value="0"/>
		<property name="fieldStrategy" value="2"/>
		<!-- 全局ID类型：0数据库ID自增，1用户输入ID, 2全局唯一ID, 3全局唯一ID-->
		<property name="idType" value="0"/>
		<!--主键Sequence，下面是Oracle数据库的 -->
		<!--<property name="keyGenerator" ref="oracleKeyGenerator"/>-->
	</bean>

	<!-- 逻辑删除Sql注入器-->
	<bean id="logicSqlInjector" class="com.baomidou.mybatisplus.mapper.LogicSqlInjector"/>

	<!-- 配置Oracle主键Sequence， 其他类型数据库，请配置相应的类型-->
	<bean id="oracleKeyGenerator" class="com.baomidou.mybatisplus.incrementer.OracleKeyGenerator"/>

	<!-- 配置mybatis 扫描mapper接口的路径, 相当于注解@MapperScan，@MapperScan("io.renren.modules.*.dao") -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="io.renren.modules.*.dao" />
	</bean>
</beans>